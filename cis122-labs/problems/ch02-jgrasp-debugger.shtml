<div class="slide">
	<h1>
		Exercise <span class="exercisenumber"></span>: jGRASP Debugger
	</h1>

	<ul>
		<li>
			Breakpoints help you <strong>debug</strong> programs (<a class="popup" href="../jgrasp.shtml">tutorial</a>).  Copy/paste this code into jGRASP:

			<table class="linenumbertable">
				<tr>
					<td>
						<pre class="linenumbers" style="font-size: smaller">
 1
 2
 3
 4
 5
 6
 7
 8
 9
10
</pre>
					</td>
					<td>
						<pre style="font-size: smaller">
public class Numbers {
    public static void main(String[] args) {
        int number = 42;
        for (int i = 1; i &lt;= 1000; i++) {
            number = number * 37 % 103;
        }
        int number2 = number * number;
        System.out.println("result = " + number2);
    }
}
</pre>
					</td>
				</tr>
			</table>
		</li>
		
		<li>
			<strong>Set a breakpoint</strong> on the statement inside the <code>for</code> loop (line 5).  Do this by moving your cursor to the beginning of that line until you see a
			<strong>stop-sign icon</strong> 
			<img src="images/jgrasp-stop-sign.png" alt="icon" width="18" height="18" />
			and then clicking.
		</li>
	</ul>
	
	<p class="continued">
		continued on the next slide...
	</p>
</div>

<div class="slide">
	<h1>Exercise <span class="exercisenumber noincrement"></span> - jGRASP Debugger</h1>
	
	<ul>
		<li>
			Now you can debug the program by clicking on the debug icon
			<img src="images/jgrasp-ladybug-icon.png" alt="icon" width="20" height="20" />
			(looks like a ladybug).
		</li>
		
		<li>
			It will stop every time it hits line 5.
			Then you can see the values of variables <code>i</code> and <code>number</code>.
		</li>
		
		<li>
			To continue running, press the top-left <strong>play</strong>
			<img src="images/jgrasp-play-icon.png" alt="icon" width="28" height="28" />
			or <strong>step</strong>
			<img src="images/jgrasp-step-icon.png" alt="icon" width="28" height="28" />
			buttons.
		</li>
		
		<li>
			Using this approach, <strong>fill in</strong> the table below indicating what value <code>number</code> has when <code>i</code> has the given value.
			Keep in mind that you are figuring out what value <code>number</code> has just before it executes this line of code.

			<table class="expressiontable">
				<tr>
					<td class="expression"><code>i = 1, number = </code></td>
					<td><input type="text" class="expressionanswer" size="6" spellcheck="false" /></td>
					<td><pre class="expressionsolution">42</pre></td>
				</tr>
				<tr>
					<td class="expression"><code>i = 2, number = </code></td>
					<td><input type="text" class="expressionanswer" size="6" spellcheck="false" /></td>
					<td><pre class="expressionsolution">9</pre></td>
				</tr>
				<tr>
					<td class="expression"><code>i = 3, number = </code></td>
					<td><input type="text" class="expressionanswer" size="6" spellcheck="false" /></td>
					<td><pre class="expressionsolution">24</pre></td>
				</tr>
				<tr>
					<td class="expression"><code>i = 4, number = </code></td>
					<td><input type="text" class="expressionanswer" size="6" spellcheck="false" /></td>
					<td><pre class="expressionsolution">64</pre></td>
				</tr>
			</table>
		</li>
	</ul>
	
	<p class="continued">
		continued on the next slide...
	</p>
</div>

<div class="slide">
	<h1>Exercise <span class="exercisenumber noincrement"></span> - jGRASP Debugger</h1>
	
	<ul>
		<li>
			Click on the stop-sign
			<img src="images/jgrasp-stop-sign.png" alt="icon" width="18" height="18" />
			a second time to get rid of it and then set a new stop point on line number 7.
			This will allow you to find out the value of <code>number</code> after the loop is done executing.
		</li>
		
		<li>
			Again press "play"
			<img src="images/jgrasp-play-icon.png" alt="icon" width="28" height="28" /> 
			to start the programming running again.
		</li>
		
		<li>
			At line 7, what is the value of <code>number</code>?
			
			<span class="expressionarea" style="margin-left: 1em">
				<input type="text" class="expressionanswer" size="6" spellcheck="true" />
				<span class="expressionsolution">69</span>
			</span>
		</li>
	</ul>
</div>
